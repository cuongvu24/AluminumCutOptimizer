import streamlit as st
import pandas as pd
import io
import time
from utils import create_accessory_summary, validate_input_excel
from cutting_optimizer import optimize_cutting
from utils import create_output_excel

# Giao di·ªán d√πng chung
st.header("üì§ T·∫£i L√™n File D·ªØ Li·ªáu")
uploaded_file = st.file_uploader("Ch·ªçn File Excel (ph·ª• ki·ªán ho·∫∑c thanh nh√¥m)", type=["xlsx", "xls"])

# Tabs ri√™ng bi·ªát
if uploaded_file:
    tab1, tab2 = st.tabs(["üì¶ T√≠nh Ph·ª• Ki·ªán", "‚úÇÔ∏è T·ªëi ∆Øu C·∫Øt Nh√¥m"])

    with tab1:
        try:
            acc_df = pd.read_excel(uploaded_file)
            st.success("‚úÖ File h·ª£p l·ªá, ƒëang t·ªïng h·ª£p ph·ª• ki·ªán...")
            output = io.BytesIO()
            summary_df = create_accessory_summary(acc_df, output)
            output.seek(0)
            st.subheader("üìã B·∫£ng T·ªïng H·ª£p Ph·ª• Ki·ªán")
            st.dataframe(summary_df)
            st.download_button(
                label="üì• T·∫£i Xu·ªëng File T·ªïng H·ª£p Ph·ª• Ki·ªán",
                data=output,
                file_name="tong_hop_phu_kien.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
        except Exception as e:
            st.warning("Kh√¥ng ph·∫£i file ph·ª• ki·ªán ho·∫∑c thi·∫øu c·ªôt ph√π h·ª£p.")

    with tab2:
        try:
            df = pd.read_excel(uploaded_file)
            valid, message = validate_input_excel(df)
            if not valid:
                st.error(message)
            else:
                st.success("‚úÖ D·ªØ li·ªáu nh√¥m h·ª£p l·ªá! S·∫µn s√†ng x·ª≠ l√Ω t·ªëi ∆∞u h√≥a.")
                st.dataframe(df)

                stock_length = st.number_input("Chi·ªÅu D√†i Ti√™u Chu·∫©n (mm)", min_value=1000, value=6000, step=100)
                cutting_gap = st.number_input("Kho·∫£ng C√°ch C·∫Øt (mm)", min_value=1, value=10, step=1)
                optimization_method = st.selectbox("Ph∆∞∆°ng Ph√°p T·ªëi ∆Øu", ["T·ªëi ∆Øu Hi·ªáu Su·∫•t Cao Nh·∫•t", "T·ªëi ∆Øu S·ªë L∆∞·ª£ng Thanh"])
                length_options_text = st.text_input("Nh·∫≠p c√°c k√≠ch th∆∞·ªõc thanh c√≥ th·ªÉ d√πng (c√°ch nhau b·ªüi d·∫•u ph·∫©y)", "5800, 6000, 6200, 6500")

                if st.button("üöÄ B·∫Øt ƒë·∫ßu t·ªëi ∆∞u h√≥a"):
                    with st.spinner("üîÑ ƒêang t·ªëi ∆∞u h√≥a..."):
                        try:
                            stock_length_options = [int(x.strip()) for x in length_options_text.split(",") if x.strip().isdigit()]
                            start_time = time.time()
                            result_df, patterns_df, summary_df = optimize_cutting(
                                df,
                                stock_length=stock_length,
                                cutting_gap=cutting_gap,
                                optimization_method=optimization_method,
                                stock_length_options=stock_length_options,
                                optimize_stock_length=True
                            )
                            end_time = time.time()
                            st.success(f"‚úÖ T·ªëi ∆∞u ho√†n t·∫•t sau {end_time - start_time:.2f} gi√¢y")
                            st.dataframe(summary_df)
                            output = io.BytesIO()
                            create_output_excel(output, result_df, patterns_df, summary_df, stock_length, cutting_gap)
                            output.seek(0)
                            st.download_button(
                                label="üì• T·∫£i Xu·ªëng K·∫øt Qu·∫£ C·∫Øt Nh√¥m",
                                data=output,
                                file_name="ket_qua_cat_nhom.xlsx",
                                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                            )
                        except Exception as opt_e:
                            st.error(f"‚ùå L·ªói t·ªëi ∆∞u h√≥a: {opt_e}")
        except Exception as e:
            st.error(f"‚ùå L·ªói x·ª≠ l√Ω: {e}")
# Footer
st.markdown("---")
st.markdown("Ph·∫ßn M·ªÅm T·ªëi ∆Øu C·∫Øt Nh√¥m ¬© 2025 By C∆∞·ªùng V≈©")
st.markdown("M·ªçi th·∫Øc m·∫Øc xin li√™n h·ªá Zalo 0977 487 639")
